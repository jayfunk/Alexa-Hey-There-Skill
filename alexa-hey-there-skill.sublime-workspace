{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"HEAD",
				"HEADER_HEIGHT\t(listItemsSelector.js)"
			],
			[
				"_genera",
				"_generateInvalidContacts"
			],
			[
				"service",
				"serviceHandles"
			],
			[
				"rand",
				"randomId"
			],
			[
				"yj",
				"yjContact"
			],
			[
				"_inv",
				"_logInvalidContact"
			],
			[
				"primary",
				"primaryGroupId"
			],
			[
				"chatRoom",
				"chatroomPermission"
			],
			[
				"ser",
				"serviceHandles"
			],
			[
				"j",
				"jhandels_sales"
			],
			[
				"inva",
				"invalidContactMissingServiceHandles"
			],
			[
				"data",
				"dataStore"
			],
			[
				"Contact",
				"ContactTransformer"
			],
			[
				"stru",
				"structureId"
			],
			[
				"THE",
				"THEO_NEUTRAL"
			],
			[
				"THEO",
				"THEO_NEUTRAL"
			],
			[
				"T",
				"THEO_SELL"
			],
			[
				"isIc",
				"isIceMarket"
			],
			[
				"isI",
				"isIceTopBidOfferBetterThanMarketBidOffer\t(structureAnalyticsSelectors.spec.js)"
			],
			[
				"ICE",
				"ICE_MARKET_INDICATOR_TOOL"
			],
			[
				"mess",
				"messageMarketData"
			],
			[
				"struc",
				"structure"
			],
			[
				"isIce",
				"isIceTopBidOfferBetterThanMarketBidOffer"
			],
			[
				"SOUR",
				"SOURCE_WEBICE"
			],
			[
				"Ana",
				"AnalyticsConstants\t(AnalyticsPreferencesModal.js)"
			],
			[
				"action",
				"action-creators\t(manifest.js)"
			],
			[
				"class",
				"className\t(MessageConsole.js)"
			],
			[
				"widget",
				"widgetId"
			],
			[
				"cop",
				"copyToMessageInput"
			],
			[
				"acti",
				"activityFilterOptions"
			],
			[
				"act",
				"activityFilterOptions"
			],
			[
				"contac",
				"contactsSelector"
			],
			[
				"erro",
				"errorMessage"
			],
			[
				"coun",
				"counterpartyIdSelector"
			],
			[
				"isMar",
				"isMarketLine"
			],
			[
				"new",
				"newline"
			],
			[
				"button",
				"buttonWrapper"
			],
			[
				"dis",
				"dispatch"
			],
			[
				"selec",
				"selectedMarket"
			],
			[
				"market",
				"marketSelector"
			],
			[
				"find",
				"findStructureById"
			],
			[
				"Anal",
				"AnalyticsPreferencesModal"
			],
			[
				"defaul",
				"defaultState"
			],
			[
				"anal",
				"analyticsSource"
			],
			[
				"under",
				"underlyingPrice\t(UnderPrice.js)"
			],
			[
				"topa",
				"topAskSize"
			],
			[
				"Last",
				"LastTradeTool\t(LastTradeTool.js)"
			],
			[
				"defa",
				"defaultAction"
			],
			[
				"THEOIN",
				"THEO_INDICATOR_TOOL"
			],
			[
				"inline",
				"inlineAnalyitcs\t(preferencesReducer.js)"
			],
			[
				"DES",
				"DESK_MEMBER_HANDLE_DELIMITER_NODE_TYPE"
			],
			[
				"DESK",
				"DESK_MEMBER_HANDLE_NODE_TYPE"
			],
			[
				"MARK",
				"MARKET_DELIMETER_NODE_TYPE"
			],
			[
				"DESK_MEM",
				"DESK_MEMBER_HANDLE_DELIMITER_NODE_TYPE\t(DeskMemberHandleParser.js)"
			],
			[
				"child",
				"childrenBefore"
			],
			[
				"childre",
				"childrenBefore"
			],
			[
				"index",
				"indexOfMarket"
			],
			[
				"chi",
				"childrenAfter"
			],
			[
				"caput",
				"capturedChildrenBefore"
			],
			[
				"cap",
				"capturedChildrenBefore"
			],
			[
				"qu",
				"quoteId"
			],
			[
				"after",
				"afterChildren"
			],
			[
				"is",
				"isCapturingBefore"
			],
			[
				"chidl",
				"children"
			],
			[
				"ca",
				"capturedChildren"
			],
			[
				"sour",
				"sourceDesc"
			],
			[
				"servic",
				"serviceDescription"
			],
			[
				"_hand",
				"_handleToggleOpen"
			],
			[
				"widgetState",
				"widgetStateSelector"
			],
			[
				"comp",
				"componentDidUpdate\t(propComparison.sublime-snippet)"
			],
			[
				"componentwil",
				"componentWillUpdate\t Life Cycle"
			],
			[
				"component",
				"componentDidMount\t Life Cycle"
			],
			[
				"widgetId",
				"widgetId"
			],
			[
				"regi",
				"regionId"
			],
			[
				"make",
				"makeMapDispatchToProps"
			],
			[
				"thor",
				"throttledOnChange"
			],
			[
				"throttle",
				"throttledOnChange"
			],
			[
				"thro",
				"throws"
			],
			[
				"clip",
				"clipboardText"
			],
			[
				"widet",
				"widgetId"
			],
			[
				"pr",
				"preferredContactServiceHandleIndex"
			],
			[
				"Mess",
				"MessageHistoryContainer"
			],
			[
				"Mes",
				"MessageHistoryContainer"
			],
			[
				"setWidget",
				"setWidgetNameSelector"
			],
			[
				"setWidgetName",
				"setWidgetNameSelector\t(MessageConsoleTabContainer.js)"
			],
			[
				"mark",
				"markReadSelector"
			],
			[
				"style",
				"styleSelector\t(MessageConsoleTabContainer.js)"
			],
			[
				"hasCh",
				"hasChatRoomInvitationByHandleSelector"
			],
			[
				"chatRoomI",
				"chatRoomIdSelector"
			],
			[
				"member",
				"memberFilters"
			],
			[
				"filted",
				"filteredContacts"
			],
			[
				"fil",
				"filteredContacts"
			],
			[
				"last",
				"lastState"
			],
			[
				"filteredCon",
				"filteredContacts"
			],
			[
				"filteredContac",
				"filteredContactsSelector"
			],
			[
				"chatRoomId",
				"chatRoomIdSelector"
			],
			[
				"chatROom",
				"chatRoomSelector"
			],
			[
				"work",
				"workspacesSelector"
			],
			[
				"creat",
				"createSelector"
			],
			[
				"works",
				"workspacesSelector"
			],
			[
				"memoi",
				"memoizedFunc"
			],
			[
				"mem",
				"membersMergedWithContacts"
			],
			[
				"isA",
				"isActiveChatRoom"
			],
			[
				"create",
				"createStructuredSelector\t(ChatRoomStatusBar.js)"
			],
			[
				"chat",
				"chatRoomSelector"
			],
			[
				"userHa",
				"userHandleSelector"
			],
			[
				"userSer",
				"userServiceHandleIndexSelector"
			],
			[
				"crea",
				"createSelector"
			],
			[
				"state",
				"stateSelector"
			],
			[
				"let",
				"let_permissions"
			],
			[
				"err",
				"errorDescription"
			],
			[
				"onOp",
				"onOpenTicket"
			],
			[
				"ana",
				"analyticsDecimalPlaces\t(preferencesSelectors.js)"
			],
			[
				"prefe",
				"preferencesSelector"
			],
			[
				"SOURCE_",
				"SOURCE_WEBICE"
			],
			[
				"handl",
				"handleReprice"
			],
			[
				"updateBlasterSel",
				"updateBlasterSelectedGroups\t(blaster.js)"
			],
			[
				"sel",
				"selectedGroups\t(Blaster.js)"
			],
			[
				"wid",
				"widgetState"
			],
			[
				"messageInput",
				"messageInputHeight"
			],
			[
				"update",
				"updateSelectedGroups"
			],
			[
				"show",
				"showGroupList"
			],
			[
				"slecte",
				"selectedGroups"
			],
			[
				"selected",
				"selectedGroups"
			],
			[
				"str",
				"structureId"
			],
			[
				"Pricer",
				"PricerContainer"
			],
			[
				"markets",
				"markets:created\t(analytics.js)"
			],
			[
				"theo",
				"theoStatus"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 227.0,
		"last_filter": "json",
		"selected_items":
		[
			[
				"json",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"mark",
				"Set Syntax: Markdown GFM"
			],
			[
				"text",
				"Set Syntax: Textile"
			],
			[
				"chek",
				"Git: Checkout Current File"
			],
			[
				"log",
				"Git: Log Current File"
			],
			[
				"diff",
				"Git: Diff Current File"
			],
			[
				"blam",
				"Git: Blame"
			],
			[
				"blame",
				"Git: Blame"
			],
			[
				"check",
				"Git: Checkout Current File"
			],
			[
				"todo",
				"TodoReview: Project Files"
			],
			[
				"ren",
				"File: Rename"
			],
			[
				"rename",
				"File: Rename"
			],
			[
				"rena",
				"File: Rename"
			],
			[
				"bable",
				"Set Syntax: JavaScript (Babel)"
			],
			[
				"rean",
				"TodoReview: Project and Open Files"
			],
			[
				"git log",
				"Git: Log Current File"
			],
			[
				"duff",
				"Code Folding: Unfold All"
			],
			[
				"form",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"pull",
				"Git: Pull"
			],
			[
				"git pull",
				"Git: Pull"
			],
			[
				"checl",
				"Git: Checkout Current File"
			],
			[
				"java",
				"Set Syntax: JavaScript (Babel)"
			],
			[
				"d",
				"Set Syntax: D"
			],
			[
				"hec",
				"Git: Checkout Current File"
			],
			[
				"close",
				"File: Close All"
			],
			[
				"renam",
				"File: Rename"
			],
			[
				"dif",
				"Git: Diff Current File"
			],
			[
				"chec",
				"Git: Checkout Current File"
			],
			[
				"chc",
				"Git: Checkout Current File"
			],
			[
				"llg",
				"SublimeLinter: Choose Gutter Theme"
			],
			[
				"che",
				"Git: Checkout Current File"
			],
			[
				"lo",
				"Git: Log Current File"
			],
			[
				"clo",
				"File: Close All"
			],
			[
				"ceck",
				"Git: Checkout Current File"
			],
			[
				"babel",
				"Set Syntax: JavaScript (Babel)"
			],
			[
				"babl",
				"Set Syntax: JavaScript (Babel)"
			],
			[
				"bla",
				"Git: Blame"
			],
			[
				"show",
				"Git: Show Current File"
			],
			[
				"create",
				"Package Control: Create Package File"
			],
			[
				"bl",
				"Git: Blame"
			],
			[
				"ch",
				"Git: Checkout Current File"
			],
			[
				"r",
				"File: Rename"
			],
			[
				"di",
				"Git: Diff Current File"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"renm",
				"File: Rename"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"for",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"checkout",
				"Git: Checkout Current File"
			],
			[
				"re",
				"File: Rename"
			],
			[
				"plist",
				"Plist Binary: Toggle XML & Binary"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"chcek",
				"Git: Checkout Current File"
			],
			[
				"chcec",
				"Git: Checkout Current File"
			],
			[
				"snippet",
				"Snippet: for (…) {…} (Improved Native For-Loop)"
			],
			[
				"clos",
				"Project: Close"
			],
			[
				"dff",
				"Git: Diff Current File"
			],
			[
				"format",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"renae",
				"File: Rename"
			],
			[
				"reverse",
				"Permute Lines: Reverse"
			],
			[
				"l",
				"Git: Log Current File"
			],
			[
				"git blam",
				"Git: Blame"
			],
			[
				"git commit",
				"Set Syntax: Git Commit View"
			],
			[
				"git",
				"Set Syntax: Git Graph"
			],
			[
				"git ",
				"Git: Commit history"
			],
			[
				"reset",
				"Git: Reset (unstage) Current File"
			],
			[
				"lin",
				"SublimeLinter: Lint This View"
			],
			[
				"snippet des",
				"Snippet: describe"
			],
			[
				"eslint",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"CHEC",
				"Git: Checkout Current File"
			],
			[
				"fo",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"heck",
				"Git: Checkout Current File"
			],
			[
				"beau",
				"HTMLBeautify"
			],
			[
				"gitlog",
				"Git: Log Current File"
			],
			[
				"chcekc",
				"Git: Checkout Current File"
			],
			[
				"coffee",
				"Set Syntax: CoffeeScript"
			],
			[
				"git stash pop",
				"Git: Stash Pop"
			],
			[
				"stash",
				"Git: Stash Changes"
			],
			[
				"js",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"checkou",
				"Git: Checkout Tag"
			],
			[
				"toog",
				"Coffee: Toggle Watch Mode"
			],
			[
				"lint",
				"Coffee: Lint"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"cl",
				"Project: Close"
			],
			[
				"clso",
				"Project: Close"
			],
			[
				"folder",
				"Project: Add Folder"
			],
			[
				"lose",
				"Project: Close"
			],
			[
				"balm",
				"Git: Blame"
			],
			[
				"LOG",
				"Git: Log Current File"
			],
			[
				"loc",
				"Git: Log Current File"
			],
			[
				"git check",
				"Git: Checkout Current File"
			],
			[
				"git reset",
				"Git: Reset (unstage) Current File"
			],
			[
				"gitdiff",
				"Git: Diff Current File"
			],
			[
				"reset curre",
				"Git: Reset (unstage) Current File"
			],
			[
				"bookmar",
				"SublimeBookmarks: Goto Bookmark"
			],
			[
				"isntal",
				"Package Control: Install Package"
			],
			[
				"git reset curre",
				"Git: Reset (unstage) Current File"
			],
			[
				"pretty",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"git diff",
				"Git: Diff Tool Current File"
			],
			[
				"git log curre",
				"Git: Log Current File"
			],
			[
				"Package Control: pac",
				"Package Control: List Packages"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"web",
				"Web Inspector"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"",
				"About"
			],
			[
				"install ",
				"Package Control: Install Package"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 208.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": true,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/tcook/projects/Alexa-Hey-There-Skill"
	],
	"file_history":
	[
		"/Users/tcook/projects/idp-yj/manifest.js",
		"/Users/tcook/projects/idp-yj/lib/action-creators/chat-rooms.js",
		"/Users/tcook/projects/idp-yj/lib/action-creators/chatRoomWidgets.js",
		"/Users/tcook/projects/idp-yj/lib/commands/BuildWidgetOptionsForChatRoomEditorWidget.js",
		"/Users/tcook/projects/idp-yj/lib/commands/CreateChatRoomConsole.js",
		"/Users/tcook/projects/idp-yj/lib/commands/CreateChatRoomConsoleForChatRoom.js",
		"/Users/tcook/projects/idp-yj/lib/commands/CreateChatRoomConsolesForChatRooms.js",
		"/Users/tcook/projects/idp-yj/lib/commands/CreateOrUpdateChatRooms.js",
		"/Users/tcook/projects/idp-yj/lib/commands/DisplayToastersForNotifiableChatRoomMessages.js",
		"/Users/tcook/projects/idp-yj/lib/commands/GetAllChatRooms.js",
		"/Users/tcook/projects/idp-yj/lib/commands/LoadChatRoomSnapshotToContext.js",
		"/Users/tcook/projects/idp-yj/lib/commands/MapChatRoomConsolesToChatRooms.js",
		"/Users/tcook/projects/idp-yj/lib/commands/MarkReadAllChatRoomIds.js",
		"/Users/tcook/projects/idp-yj/lib/commands/PersistChatRoomSnapshots.js",
		"/Users/tcook/projects/idp-yj/lib/commands/SetChatRoomModalMessage.js",
		"/Users/tcook/projects/idp-yj/lib/commands/SetChatRoomSnapshotIfMissing.js",
		"/Users/tcook/projects/idp-yj/lib/commands/TransmitChatRoomsActionMessagesExport.js",
		"/Users/tcook/projects/idp-yj/lib/commands/TransmitChatRoomsActionRejoin.js",
		"/Users/tcook/projects/idp-yj/lib/commands/TransmitChatRoomsActionUpdate.js",
		"/Users/tcook/projects/idp-yj/lib/commands/messaging/createUnreadCountByChatRoomIdMappingGroupedByWindowForIncomingMessages.js",
		"/Users/tcook/projects/idp-yj/lib/initialization-tasks/AddTabsForUnopenedChatRoomsWithPendingInvitations.js",
		"/Users/tcook/projects/idp-yj/lib/initialization-tasks/RemoveWidgetsAssociatedWithDeletedChatRoomsTask.js",
		"/Users/tcook/projects/idp-yj/lib/menu-providers/ContactContextMenuProvider.js",
		"/Users/tcook/projects/idp-yj/lib/menu-providers/GroupContextMenuProvider.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms/chatRoomRegionDropMenuSelector.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms/Editor.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms/List.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms/__tests__/chatRoomRegionDropMenuSelector.spec.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms/components/ChatRoomStatusBar.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms/components/Invitation.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms/components/MemberSelector.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms/components/InviteToChatRoom/index.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms/containers/ConsoleContainer.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms/containers/EditorContainer.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms/containers/ListContainer.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms/plugins/ChatRoomConsoleTabMenuProvider.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms/plugins/EditorTabContainer.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/contact-list/list-items/listItemsSelector.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/contact-list/list-items/chat-room/ChatRoomContainer.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/contact-list/list-items/chat-rooms-group/ChatRoomsGroupContextMenuProvider.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/contact-list/list-items/chat-rooms-group/ChatRoomsHeaderContainer.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/message-console/messageConsoleRegionDropMenuSelector.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/message-console/MessageConsoleTabMenuProvider.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/message-console/__tests__/messageConsoleRegionDropMenuSelector.spec..js",
		"/Users/tcook/projects/idp-yj/test/commands/CreateOrUpdateChatRoomsTest.js",
		"/Users/tcook/projects/idp-yj/lib/commands/ClearChatRoomMessageCachesForChatRoomsTransitioningToActive.js",
		"/Users/tcook/projects/idp-yj/package.json",
		"/Users/tcook/projects/idp-yj/lib/stores/messages/selectors/hasCompletedLoadingServerMessages.js",
		"/Users/tcook/Library/Application Support/Sublime Text 3/Packages/User/MultiMarkdown.sublime-settings",
		"/Users/tcook/projects/idp-yj/lib/commands/PersistContactMessageBatchToStore.js",
		"/Users/tcook/projects/idp-yj/lib/workers/transformers/httpResponseTransforms.js",
		"/Users/tcook/projects/idp-yj/lib/commandChains.js",
		"/Users/tcook/projects/idp-yj/lib/commands/FetchMessagesFromDiskOrServer.js",
		"/Users/tcook/projects/idp-yj/lib/commands/AddOfflineContactMessageError.js",
		"/Users/tcook/projects/idp-yj/lib/commands/DispatchContactMessageBatch.js",
		"/Users/tcook/projects/idp-yj/lib/workers/YjWorker.js",
		"/Users/tcook/projects/idp-yj/lib/workers/transformers/ServerEventTransformer.js",
		"/Users/tcook/projects/idp-yj/lib/workers/transformers/message-transforms/ChatMessageEventTransformer.js",
		"/Users/tcook/projects/idp-yj/lib/workers/LongPoll.js",
		"/Users/tcook/projects/idp-yj/lib/workers/receivers/LongPollEventReceiver.js",
		"/Users/tcook/projects/idp-yj/lib/workers/transformers/message-transforms/ChatMessageResponseTransformer.js",
		"/Users/tcook/projects/idp-yj/lib/stores/messages/messageSelectors.js",
		"/Users/tcook/Downloads/auto messages out of order email thread.txt",
		"/Users/tcook/projects/idp-yj/lib/stores/messages/orderedSetReducer.js",
		"/Users/tcook/projects/idp-yj/lib/stores/messages/messageHistoryReducer.js",
		"/Users/tcook/projects/idp-yj/lib/stores/messages/messageIdIndexReducer.js",
		"/Users/tcook/projects/idp-yj/lib/commands/LoadMessagesByMatch.js",
		"/Users/tcook/projects/idp-yj/lib/stores/contacts/contactSelectors.js",
		"/Users/tcook/projects/idp-yj/lib/workers/mock-worker/YjMockWorker.js",
		"/Users/tcook/projects/idp-yj/lib/workers/mock-worker/YjMockWorkerSchema.js",
		"/Users/tcook/projects/idp-yj/lib/workers/mock-worker/TestEnvironment.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/contact-list/list-items/__tests__/listItemsSelector.spec.js",
		"/Users/tcook/projects/idp-yj/lib/workers/mock-worker/generatorMappings.js",
		"/Users/tcook/projects/idp-yj/lib/workers/transformers/domain-objects/contactTransformer.js",
		"/Users/tcook/projects/idp-yj/lib/stores/user/userSelectors.js",
		"/Users/tcook/projects/idp-yj/lib/menu-providers/YjHelpMenuProvider.js",
		"/Users/tcook/projects/idp-yj/lib/stores/contacts/contactsSelectors.js",
		"/Users/tcook/projects/idp-yj/lib/commands/UpdateContactService.js",
		"/Users/tcook/projects/idp-yj/lib/workers/transformers/server-events/UpdateBuddyEventTransformer.js",
		"/Users/tcook/projects/idp-yj/lib/workers/transformers/domain-objects/ContactTransformer.js",
		"/Users/tcook/projects/idp-yj/lib/workers/transformers/domain-objects/__tests__/ContactTransformer.spec.js",
		"/Users/tcook/projects/idp-yj/test/workers/transformers/server-events/UpdateBuddyEventTransformerTest.js",
		"/Users/tcook/projects/idp-yj/lib/workers/transformers/http-responses/MyConnectionsResponseTransformer.js",
		"/Users/tcook/projects/idp-yj/lib/workers/transformers/http-responses/__tests__/MyConnectionsResponseTransformer.spec.js",
		"/Users/tcook/projects/idp-yj/lib/workers/transceiver/TransceiverFailureHandler.js",
		"/Users/tcook/projects/idp-yj/test/workers/transformers/domain-objects/fixtures/aim-contact.js",
		"/Users/tcook/projects/idp-yj/test/workers/transformers/domain-objects/fixtures/invalidContactMissingServiceHandles.js",
		"/Users/tcook/projects/idp-yj/lib/stores/contacts/contactsReducer.js",
		"/Users/tcook/projects/idp-yj/lib/workers/transformers/server-events/IMPresenceEventTransformer.js",
		"/Users/tcook/projects/idp-yj/lib/workers/mock-worker/incoming-event-generators/ContactPresenceUpdateBatchEventGenerator.js",
		"/Users/tcook/projects/idp-yj/test/workers/transformers/domain-objects/fixtures/yj-contact.js",
		"/Users/tcook/projects/idp-yj/test/stores/fixtures/aimContact.js",
		"/Users/tcook/projects/idp-yj/test/workers/transformers/domain-objects/fixtures/yj-contact-with-invalid-annotations.js",
		"/Users/tcook/projects/idp-yj/lib/components/ContactBar.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/contact-list/ContactList.js",
		"/Users/tcook/projects/idp-yj/lib/action-creators/deskActivityWidget.js",
		"/Users/tcook/projects/idp-yj/lib/commands/ApplyClientFieldsToContacts.js",
		"/Users/tcook/projects/idp-yj/lib/stores/prioritizedContactsReducer.js",
		"/Users/tcook/projects/idp-yj/lib/workers/transformers/domain-objects/ChatRoomTransformer.js",
		"/Users/tcook/projects/idp-yj/lib/stores/chatRooms/chatRoomsReducer.js",
		"/Users/tcook/projects/idp-yj/lib/commands/LoadContactsToStore.js",
		"/Users/tcook/projects/idp-yj/lib/types/contacts.js",
		"/Users/tcook/projects/idp-yj/lib/types/idp.js",
		"/Users/tcook/projects/idp-yj/lib/types/index.js",
		"/Users/tcook/projects/idp-yj/lib/stores/messages/types.js",
		"/Users/tcook/projects/idp-yj/lib/initialization-tasks/RemoveWidgetsWithDisconnectedContactsTask.js",
		"/Users/tcook/projects/idp-yj/lib/initialization-tasks/HasInitialDataLoaded.js",
		"/Users/tcook/projects/idp-yj/lib/components/analytics/pricer/Pricer.js",
		"/Users/tcook/projects/idp-yj/lib/stores/analytics/__tests__/structureAnalyticsSelectors.spec.js",
		"/Users/tcook/projects/idp-yj/lib/stores/analytics/structureAnalyticsSelectors.js",
		"/Users/tcook/projects/idp-yj/lib/components/analytics/tools/Theo.js",
		"/Users/tcook/projects/idp-yj/lib/components/analytics/InlineAnalyticsMessageLine.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/DirectorySearch/__tests__/directorySearchStateReducer.spec.js",
		"/Users/tcook/projects/idp-yj/lib/components/analytics/tools/IceMarketIndicatorTool.js",
		"/Users/tcook/projects/idp-yj/lib/constants/AnalyticsConstants.js",
		"/Users/tcook/projects/idp-yj/lib/components/PropTypes.js",
		"/Users/tcook/projects/idp-yj/lib/components/analytics/tools/index.js",
		"/Users/tcook/projects/idp-yj/lib/components/ContactBar/mapStateToPropsFactory.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/message-console/MessageConsole.js",
		"/Users/tcook/projects/idp-yj/lib/menu-providers/YjUserMenuProvider.js",
		"/Users/tcook/projects/idp-yj/lib/components/select/Select.js",
		"/Users/tcook/projects/idp-yj/lib/menu-providers/YjNotificationsMenuProvider.js",
		"/Users/tcook/projects/idp-yj/buildfile",
		"/Users/tcook/projects/idp-yj/lib/menu-providers/YjContactsMenuProvider.js",
		"/Users/tcook/projects/idp-yj/lib/workers/transformers/serverEventTransforms.js",
		"/Users/tcook/projects/idp-yj/lib/widgets/message-console/MessageConsole.js.orig",
		"/Users/tcook/projects/idp-yj/lib/widgets/desk-activity/DeskActivity.js.orig",
		"/Users/tcook/projects/idp-yj/lib/widgets/desk-activity/DeskActivity.js"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			"/Users/tcook/projects/idp-yj/lib/workers/mock-worker",
			"",
			"/Users/tcook/projects/idp-yj/lib/workers/mock-worker",
			"",
			"/Users/tcook/projects/idp-yj/lib/workers/transformers",
			"",
			"/Users/tcook/projects/idp-yj/lib/components/message-history",
			"",
			"/Users/tcook/projects/idp-yj/lib/components/analytics, ,/Users/tcook/projects/idp-yj/lib/widgets/message-console,/Users/tcook/projects/idp-yj/lib/components/message-history",
			"",
			"/Users/tcook/projects/idp-yj/lib/components/analytics, ,/Users/tcook/projects/idp-yj/lib/widgets/message-console,/Users/tcook/projects/idp-yj/lib/components/message-history",
			"/Users/tcook/projects/idp-yj/lib/components/analytics, ",
			"",
			"/Users/tcook/projects/idp-yj/lib/components/message-history",
			"",
			"/Users/tcook/projects/idp-yj/lib/components/analytics/tools",
			"",
			"/Users/tcook/projects/idp-yj/lib/components",
			"/Users/tcook/projects/idp-yj/lib/widgets",
			"",
			"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms",
			"",
			"/Users/tcook/projects/idp-yj/lib/components/analytics",
			"",
			"/Users/tcook/projects/idp-yj/lib/workers",
			"",
			"/Users/tcook/projects/idp-yj/lib/workers/transformers/http-responses",
			"/Users/tcook/projects/idp-yj/lib/workers",
			"",
			"/Users/tcook/projects/idp-yj/lib/workers",
			"",
			"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms",
			"/Users/tcook/projects/idp-yj/lib/widgets",
			"",
			"/Users/tcook/projects/idp-yj/lib/widgets",
			"",
			"/Users/tcook/projects/idp-yj/lib/widgets",
			"",
			"/Users/tcook/projects/idp-yj/test/stores/messageShortcuts/selectors",
			"",
			"/Users/tcook/projects/idp-yj/lib/widgets",
			"",
			"/Users/tcook/projects/idp-yj/lib/widgets, -*.spec.js",
			"/Users/tcook/projects/idp-yj/lib/widgets",
			"",
			"/Users/tcook/projects/idp-yj/lib/menu-providers",
			"",
			"*spec*, *Test.js",
			"",
			"/users/tcook/projects/idp-yj/lib/workers",
			"/user/tcook/projects/idp-yj/lib/workers",
			"",
			"/Users/tcook/projects/idp-yj/lib/workers",
			"./lib/worker",
			"./lib/workers",
			"",
			"/Users/tcook/projects/idp-yj/lib/workers/mock-worker",
			"",
			"/Users/tcook/projects/idp-yj/lib/workers",
			"",
			"/Users/tcook/projects/idp-yj/lib/workers",
			"",
			"/Users/tcook/projects/idp-yj/lib/workers",
			"",
			"/Users/tcook/projects/idp-yj/lib/workers",
			"",
			"*.spec.js, *Test.js",
			"/Users/tcook/projects/idp-yj/test, *.spec.js",
			"*.spec.js, /Users/tcook/projects/idp-yj/test/",
			"*.spec.js, /Users/tcook/projects/idp-yj/test",
			"*.spec.js",
			"/Users/tcook/projects/idp-yj/**/__tests__/*",
			"/Users/tcook/projects/idp-yj/test",
			"/Users/tcook/projects/idp-yj/test, /Users/tcook/projects/idp-yj/**/__tests__/**/*.spec.js",
			"/Users/tcook/projects/idp-yj/test, /Users/tcook/projects/idp-yj/**/__tests__/*.spec.js",
			"/Users/tcook/projects/idp-yj/test, /Users/tcook/projects/idp-yj/**/__tests__/**",
			"./test",
			"",
			"/Users/tcook/projects/idp-yj/lib/widgets/group-management",
			"",
			"/Users/tcook/projects/idp-yj/lib/workers",
			"",
			"icehelpdesk@theice.com",
			"",
			"/Users/tcook/projects/idp-yj/lib/widgets/edit-profile",
			"",
			"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms",
			"",
			"/Users/tcook/projects/idp-yj/lib/commands",
			"",
			"/Users/tcook/projects/idp-yj/lib/commands",
			"",
			"/Users/tcook/projects/idp-yj/lib/stores/contacts",
			"/Users/tcook/projects/idp-yj/lib/stores/contacts/selectors",
			"",
			"/Users/tcook/projects/idp-yj/lib/components/message-history/message/nodes",
			"/Users/tcook/projects/idp-yj/lib/widgets/message-console",
			"/Users/tcook/projects/idp-yj/lib/widgets/contact-list",
			"/Users/tcook/projects/idp-yj",
			"/Users/tcook/projects/idp-yj/lib",
			"/Users/tcook/projects/idp-yj/test",
			"tests",
			"test",
			"",
			"lib/workers",
			"/lib/workers",
			"./lib/workers",
			"",
			"/Users/tcook/projects/idp-yj/lib/stores/messageFind",
			"",
			"/Users/tcook/projects/idp-yj/lib/stores/messageFind",
			"",
			"lib/workers",
			"",
			"/Users/tcook/projects/idp-yj/lib/workers",
			"",
			"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms",
			"",
			"/Users/tcook/projects/idp-yj/lib/widgets",
			"",
			"/Users/tcook/projects/idp-yj/lib/widgets/chat-rooms",
			"",
			"/Users/tcook/projects/idp-yj/lib/communicator/mock-communicator",
			"",
			"/Users/tcook/projects/idp-yj/lib/communicator/mock-communicator",
			"/Users/tcook/projects/idp-yj/lib",
			"/Users/tcook/projects/idp-yj/lib/widgets/contact-list"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"sound",
			"toaster",
			"'idp/",
			"'idp",
			"'idp'",
			"idp",
			"'idp'",
			"usermarkets.xml",
			"usermarkets.XML",
			"../stores/chatRooms/chatRoomSelectors",
			"/ChatRooms/",
			"ChatRooms",
			"_callNext",
			"contact:message:batch",
			"idpMessagePayload",
			"LongPollEventReceiver",
			"parse",
			"parseLongPollResponse",
			"LongPoll",
			"eventcomet",
			"eventcoment",
			"quoteMessageList",
			"FetchMessagesFromDiskOrServer",
			"LoadMessagesByMatch",
			"sortMessagesByTime",
			"sort",
			"contact:message:batch",
			"sort",
			"28",
			"33",
			"HEADER_HEIGHT",
			"randomId",
			"index",
			"_sendInitEvents",
			"this.contacts",
			"_generateContacts",
			"numberOfContacts",
			"\"",
			"Missing valid",
			"disconnect",
			"widget",
			"UpdateContactService",
			"UpdateContactService\nUpdateContactService\nUpdateContactService",
			"UpdateContactService\nUpdateContactService",
			"update:contact:service",
			"updateContactService",
			"contact:presence:update:batch",
			"defaultServiceHandles",
			"getAllServiceHandlesForContact",
			"contactServiceHandleIndexSelector",
			"preferredContactServiceHandleIndexSelector",
			"Contact",
			"\\",
			"Contact",
			"this",
			"contactTransformer",
			"tribeProfile",
			"should trans",
			"proxy",
			"contactTransformer",
			"ContactTransformer",
			"contact",
			"_isIntercom",
			"_isValidateFormat",
			"() {",
			"function",
			"this.",
			") {",
			".transform()",
			"new ContactTransformer",
			"()",
			"();",
			"this.",
			"MyConnectionsResponseTransformer",
			"ContactTransformer",
			"\"",
			"firstServiceHandle",
			"undefined",
			"contact:presence:update",
			"contact:presence:update:batch",
			"contact:presence:",
			"_synthesizeOfflinePresenceEvents",
			"contact:presence:update:batch",
			"updatePresences",
			"handlePresenceEvent",
			"yjContactConnectionStatusMap",
			"brdonenine77",
			"dataStore",
			"name",
			"handle",
			"Name",
			"_generateContacts",
			"chat:initial-data:load",
			"validContactIds",
			"widgets: [",
			"chat:initial-data:load",
			"Contact",
			"Invalid Contact",
			"onWorkersInitialized",
			"wbws",
			"THEO_STATES",
			"getTheoStatus",
			",\n",
			"MarketPropType",
			"RepriceTool",
			"IceMarketIndicatorTool",
			"true",
			"theoStatusSelector",
			"shouldShowChatStateIndicator",
			"showStatusMessage",
			"type: 'radio",
			"type: 'checkbox",
			"type: \"checkbox",
			"type: \"select",
			"type: 'select",
			"select",
			"radio",
			"checkbox",
			"radio",
			"<<<<<",
			"feedbac",
			"|",
			":",
			"THEO_INDICATOR_TOOL",
			"toolToClassNameMap",
			"MarketPropType",
			"webice:quote:select-or-pin",
			"markets:clear-selected"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"'@ice/idp/",
			"'@ice/idp'",
			"/chatRooms/",
			"PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired",
			"Vega",
			"UnderPrice",
			"TopBid",
			"TopBidSize",
			"TopAsk",
			"TopAskSize",
			"Theta",
			"Theo",
			"LastTrade",
			"IceMarketIndicatorTool",
			"Gamma",
			"Delta",
			"inlineAnalytics",
			"../../components/analytics/pricer/PricerContainer",
			"updateInlineAnalyticsDecimalPlaces",
			"isInlineAnalyticsModeBasic",
			"}",
			",\"",
			"{",
			"",
			"inlineAnalyticMessageParse",
			"../../../../lib/stores/messageShortcuts/messageShortcutSelectors",
			"import {getContactIds} from '$1contactsSelectors';",
			"import {getProductTemplateIdForContactId} from '$1contactsSelectors';",
			"import {getContacts} from '$1contactsSelectors';",
			"import {findContactById} from '$1contactsSelectors';",
			"../../../../lib/stores/contacts/__tests__/fixtures/contacts",
			"./../../stores/contacts/__tests__/fixtures/contacts",
			"../../../stores/contacts/contactSelectors",
			"} from '../../../../lib/stores/contacts/__tests__/fixtures/contacts';",
			"'../../lib/stores/contacts/__tests__/fixtures/contacts'",
			"import {$1} from '$2contacts/contactSelectors';",
			"import {$1} from '$2contacts/contactSelectors;",
			"import $1 from '$2contacts/contactSelectors;",
			"import $1 from '$contacts/contactSelectors;",
			"import $1 from '$2contacts/contactSelectors;",
			"import $0 from '$1contacts/contactSelectors;",
			"import {0} from '{1}contacts/contactSelectors;",
			"findChatRoomsWithInvitations",
			"hasChatRoomInvitation",
			"getChatRoomPermissions",
			"hasChatRoomServicePermissions",
			"getUsersHandleByService",
			"labelClassName",
			"displayIsTypingIndicators",
			"displayIsTyping",
			"displayIsTypingIndicators",
			"getPromiseByName",
			"isReloadChatEnabled",
			"enableReloadChat",
			"getTestDuration",
			"testDuration",
			"../",
			"state",
			"listDisplayName",
			"toggleWidgetTypeIdToGroup",
			"/chatRooms/",
			"/directorySearch/",
			"icehelpdesk@theice.com",
			"findChatRoomsWithInvitationsByUser",
			"findChatRoomsWithInvitationsForUser",
			"hasChatRoomInvitationByHandle",
			"hasChatRoomInvitationForUser",
			"hasChatRoomInvitations",
			"activity:message:fetch",
			"chat:history:limit:reset",
			"messageHistory.messages",
			"isLoading",
			"getMessageIdsByIndexKey",
			"lib/workers",
			"WorkerLifecycleEvents",
			"AbstractWorker",
			"__yjWorker",
			"this.stores.findById",
			"idp",
			"'idp'",
			"findById",
			"this.props.stores.findById",
			"this.stores.findById",
			"import {ServerEvent} from 'idp-communicators';",
			"import {ClientEvent} from 'idp-communicators';",
			"import {OFFLINE} from '../constants/ContactPresenceConstants';",
			"import {RenderOnAnyChangeMixin} from 'idp-component-mixins';",
			"import {ParticipantList} from 'idp-components';",
			"import {IncomingEvent} from 'idp-communicators';",
			"import ",
			"import",
			";",
			"import",
			"import \\1 from \\2;",
			"export default",
			"expandedGroupIds",
			"CopyMessageHelper",
			"getTextContentFromMessageNodes",
			"    @outboundDispatcher\n      .dispatch",
			"@services.findByName",
			"@inboundDispatcher.dispatch",
			"@outboundDispatcher.dispatch",
			"Stress Level Rate (ms)\",\"value\":\"10\"",
			"1.833333333",
			"stop",
			"start",
			"getUserAndSettings",
			"PresenceEvent",
			"ConnectionRequest",
			"yjSession:stateChanged",
			"communicator:state:changed:YellowJacket",
			"YellowJacket:communicator:stateChanged",
			"{IncomingEvent} = require 'idp-communicators'",
			"YellowJacket:communicator:stateChanged",
			"removeDuplicateMessages",
			"firstRange",
			"lastRange",
			"getMaxScrollTop",
			"topMessageId",
			"bottomMessageId",
			"RemoveAllMessagingWidgetsForContacts",
			"onCopyMessageClick",
			"getCacheSize",
			"getRange",
			"hasCacheBeenCleared",
			"prepend",
			"append",
			"_getBucket"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.coffeecompile_output":
	{
		"height": 398.0
	},
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 421.0
	},
	"output.git":
	{
		"height": 100.0
	},
	"output.unsaved_changes":
	{
		"height": 100.0
	},
	"pinned_build_system": "",
	"project": "alexa-hey-there-skill.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pack",
				"package.json"
			],
			[
				"bu",
				"buildfile"
			],
			[
				"clearchatroommessagecachesforchatroomstransitioningtoactive",
				"test/commands/ClearChatRoomMessageCachesForChatRoomsTransitioningToActiveTest.js"
			],
			[
				"persistecco",
				"lib/commands/PersistContactMessageBatchToStore.js"
			],
			[
				"fetc",
				"lib/commands/FetchMessagesFromDiskOrServer.js"
			],
			[
				"persistcontactmessagebatchtostore",
				"lib/commands/PersistContactMessageBatchToStore.js"
			],
			[
				"addofflinecontactmessageerror",
				"lib/commands/AddOfflineContactMessageError.js"
			],
			[
				"chatmessageeventtransformer",
				"lib/workers/transformers/message-transforms/ChatMessageEventTransformer.js"
			],
			[
				"servereventtransformer",
				"lib/workers/transformers/ServerEventTransformer.js"
			],
			[
				"messageselec",
				"lib/stores/messages/messageSelectors.js"
			],
			[
				"httpres",
				"lib/workers/transformers/httpResponseTransforms.js"
			],
			[
				"orderedsetreducer",
				"lib/stores/messages/orderedSetReducer.js"
			],
			[
				"messageindered",
				"lib/stores/messages/messageIdIndexReducer.js"
			],
			[
				"messagehistre",
				"lib/stores/messages/messageHistoryReducer.js"
			],
			[
				"listitemselec",
				"lib/widgets/contact-list/list-items/__tests__/listItemsSelector.spec.js"
			],
			[
				"listitemsselector",
				"lib/widgets/contact-list/list-items/listItemsSelector.js"
			],
			[
				"gener",
				"lib/workers/mock-worker/generatorMappings.js"
			],
			[
				"eventintervalbatch",
				"lib/workers/mock-communicator/__tests__/EventIntervalBatch.spec.js"
			],
			[
				"contactselec",
				"lib/stores/contacts/contactSelectors.js"
			],
			[
				"contactmenu",
				"lib/menu-providers/ContactContextMenuProvider.js"
			],
			[
				"editortb",
				"lib/widgets/chat-rooms/plugins/EditorTabContainer.js"
			],
			[
				"mani",
				"manifest.js"
			],
			[
				"updatecontact",
				"lib/commands/UpdateContactService.js"
			],
			[
				"yjhelp",
				"lib/menu-providers/YjHelpMenuProvider.js"
			],
			[
				"myconnectionsresponsetransformer",
				"lib/workers/transformers/http-responses/__tests__/MyConnectionsResponseTransformer.spec.js"
			],
			[
				"updatebuddyeventtransformer",
				"test/workers/transformers/server-events/UpdateBuddyEventTransformerTest.js"
			],
			[
				"yj-contact",
				"test/workers/transformers/domain-objects/fixtures/yj-contact.js"
			],
			[
				"aim-contac",
				"test/workers/transformers/domain-objects/fixtures/aim-contact.js"
			],
			[
				"invalid",
				"test/workers/transformers/domain-objects/fixtures/invalidContactMissingServiceHandles.js"
			],
			[
				"contacttran",
				"lib/workers/transformers/domain-objects/__tests__/ContactTransformer.spec.js"
			],
			[
				"aimcontact",
				"test/stores/fixtures/aimContact.js"
			],
			[
				"yj-cont",
				"test/workers/transformers/domain-objects/fixtures/yj-contact-with-invalid-annotations.js"
			],
			[
				"contactransfor",
				"lib/workers/transformers/domain-objects/__tests__/ContactTransformer.spec.js"
			],
			[
				"deskac",
				"lib/action-creators/deskActivityWidget.js"
			],
			[
				"contactbar",
				"lib/components/ContactBar.js"
			],
			[
				"contactlist",
				"lib/widgets/contact-list/ContactList.js"
			],
			[
				"contacttransformer",
				"lib/workers/transformers/domain-objects/__tests__/ContactTransformer.spec.js"
			],
			[
				"chatroomtransformer",
				"lib/workers/transformers/domain-objects/ChatRoomTransformer.js"
			],
			[
				"loadcontactstostore",
				"lib/commands/LoadContactsToStore.js"
			],
			[
				"applyclientfieldstocontacts",
				"lib/commands/ApplyClientFieldsToContacts.js"
			],
			[
				"types",
				"lib/stores/messages/types.js"
			],
			[
				"contact",
				"lib/types/contacts.js"
			],
			[
				"removewidgetswithdisconnectedcontactstask",
				"lib/initialization-tasks/RemoveWidgetsWithDisconnectedContactsTask.js"
			],
			[
				"hasinitialdataloaded",
				"lib/initialization-tasks/HasInitialDataLoaded.js"
			],
			[
				"theo_states",
				"lib/widgets/DirectorySearch/__tests__/directorySearchStateReducer.spec.js"
			],
			[
				"theo",
				"lib/components/analytics/tools/Theo.js"
			],
			[
				"inlinelin",
				"lib/components/analytics/InlineAnalyticsMessageLine.js"
			],
			[
				"strusel",
				"lib/stores/analytics/structureAnalyticsSelectors.js"
			],
			[
				"index.",
				"lib/components/analytics/tools/index.js"
			],
			[
				"anal",
				"lib/constants/AnalyticsConstants.js"
			],
			[
				"strucuanaselspe",
				"lib/stores/analytics/__tests__/structureAnalyticsSelectors.spec.js"
			],
			[
				"mapstatetopropsfactory",
				"lib/components/ContactBar/mapStateToPropsFactory.js"
			],
			[
				"messageconsole",
				"lib/widgets/message-console/MessageConsole.js"
			],
			[
				"contactstatbar",
				"lib/widgets/chat-rooms/components/ChatRoomStatusBar.js"
			],
			[
				"bui",
				"buildfile"
			],
			[
				"yjusermenuprovider",
				"lib/menu-providers/YjUserMenuProvider.js"
			],
			[
				"submitfeedback",
				"lib/commands/SubmitFeedback.js"
			],
			[
				"ana",
				"lib/constants/AnalyticsConstants.js"
			],
			[
				"analyticspre",
				"lib/widgets/analytics-preferences/AnalyticsPreferencesModal.js"
			],
			[
				"pricer",
				"lib/components/analytics/pricer/Pricer.js"
			],
			[
				"pricerser",
				"lib/components/analytics/pricer/PricerSearchBar.js"
			],
			[
				"pricercon",
				"lib/components/analytics/pricer/PricerContainer.js"
			],
			[
				"marketm",
				"lib/components/message-history/menu-providers/MarketStringContextMenuProvider.js"
			],
			[
				"createmarket",
				"lib/workers/mock-worker/client-event-handlers/CreateMarketClientEventHandler.js"
			],
			[
				"dispatchchatmessagesendtowebice",
				"lib/commands/DispatchChatMessageSendToWebIce.js"
			],
			[
				"sendorderresponsetransformer",
				"lib/workers/transformers/http-responses/SendOrderResponseTransformer.js"
			],
			[
				"transmitmarketcreate",
				"lib/commands/TransmitMarketCreate.js"
			],
			[
				"pricersea",
				"lib/components/analytics/pricer/PricerSearchBar.js"
			],
			[
				"price",
				"lib/components/analytics/pricer/Pricer.js"
			],
			[
				"marketmenu",
				"lib/components/message-history/menu-providers/MarketStringContextMenuProvider.js"
			],
			[
				"pricersearchbar",
				"lib/components/analytics/pricer/PricerSearchBar.js"
			],
			[
				"messagecons",
				"lib/widgets/message-console/MessageConsole.js"
			],
			[
				"messagein",
				"lib/components/MessageInput.js"
			],
			[
				"blaster",
				"lib/widgets/blaster-console/Blaster.js"
			],
			[
				"blasterresp",
				"lib/widgets/blaster-console/__tests__/blasterReducer.spec.js"
			],
			[
				"blasterred",
				"lib/widgets/blaster-console/blasterReducer.js"
			],
			[
				"blastere",
				"lib/widgets/blaster-console/blasterReducer.js"
			],
			[
				"activconre",
				"lib/widgets/activity-console/activityConsoleReducer.js"
			],
			[
				"deskactred",
				"lib/stores/deskActivity/filteredDeskActivityReducer.js"
			],
			[
				"messageconsolre",
				"lib/widgets/message-console/messageConsoleReducer.js"
			],
			[
				"messageconsol",
				"lib/widgets/message-console/MessageConsole.js"
			],
			[
				"pricercontainer",
				"lib/components/analytics/pricer/PricerContainer.js"
			],
			[
				"messageconsolered",
				"lib/widgets/message-console/messageConsoleReducer.js"
			],
			[
				"messacons",
				"lib/widgets/message-console/MessageConsole.js"
			],
			[
				"messageconsolreduspec",
				"lib/widgets/message-console/__tests__/messageConsoleReducer.spec.js"
			],
			[
				"blasteresp",
				"lib/widgets/blaster-console/__tests__/blasterReducer.spec.js"
			],
			[
				"messageinput",
				"lib/components/MessageInput.js"
			],
			[
				"blasterre",
				"lib/widgets/blaster-console/blasterReducer.js"
			],
			[
				"newline",
				"lib/parsers/NewlineParser.js"
			],
			[
				"messagehistory",
				"lib/components/message-history/MessageHistory.js"
			],
			[
				"messagehistorycontainer",
				"lib/components/message-history/MessageHistoryContainer.js"
			],
			[
				"messagecon",
				"lib/widgets/message-console/MessageConsole.js"
			],
			[
				"inlineanalyticsmessageline",
				"lib/components/analytics/InlineAnalyticsMessageLine.js"
			],
			[
				"inline",
				"lib/components/analytics/InlineAnalyticsMessage.js"
			],
			[
				"inlinlin",
				"lib/components/analytics/InlineAnalyticsMessageLine.js"
			],
			[
				"contactssele",
				"lib/stores/contacts/contactsSelectors.js"
			],
			[
				"inlineline",
				"lib/components/analytics/InlineAnalyticsMessageLine.js"
			],
			[
				"messagecontainer",
				"lib/components/message-history/message/MessageContainer.js"
			],
			[
				"messagesender",
				"lib/components/message-history/message/MessageSender.js"
			],
			[
				"standard",
				"lib/components/message-history/message/StandardMessage.js"
			],
			[
				"preferere",
				"lib/stores/preferences/preferencesReducer.js"
			],
			[
				"message",
				"lib/components/message-history/message/Message.js"
			],
			[
				"manife",
				"manifest.js"
			],
			[
				"analyticsselec",
				"lib/stores/analytics/structureAnalyticsSelectors.js"
			],
			[
				"inlinpar",
				"lib/parsers/__tests__/inlineAnalyticMessageParse.spec.js"
			],
			[
				"generat",
				"lib/workers/mock-worker/generatorMappings.js"
			],
			[
				"inlinepar",
				"lib/parsers/__tests__/inlineAnalyticMessageParse.spec.js"
			],
			[
				"theoindicatortool",
				"lib/components/analytics/tools/TheoIndicatorTool.js"
			],
			[
				"prefecesel",
				"lib/stores/preferences/preferencesSelectors.js"
			],
			[
				"prefer",
				"lib/action-creators/preferences.js"
			],
			[
				"generatro",
				"lib/workers/mock-worker/generatorMappings.js"
			],
			[
				"preferencesconstants",
				"lib/constants/PreferencesConstants.js"
			],
			[
				"preferencessel",
				"lib/stores/preferences/preferencesSelectors.js"
			],
			[
				"standardmessage",
				"lib/components/message-history/message/StandardMessage.js"
			],
			[
				"inlineaa",
				"lib/components/analytics/InlineAnalyticsMessage.js"
			],
			[
				"prefere",
				"lib/stores/preferences/preferencesReducer.js"
			],
			[
				"preferencesred",
				"lib/stores/preferences/preferencesReducer.js"
			],
			[
				"preferre",
				"lib/stores/preferences/__tests__/preferencesReducer.spec.js"
			],
			[
				"analy",
				"lib/constants/AnalyticsConstants.js"
			],
			[
				"structureanalytics",
				"lib/stores/analytics/structureAnalyticsReducer.js"
			],
			[
				"picerbod",
				"lib/components/analytics/pricer/PricerBody.js"
			],
			[
				"pricerbod",
				"lib/components/analytics/pricer/PricerBody.js"
			],
			[
				"pricerhea",
				"lib/components/analytics/pricer/PricerHeader.js"
			],
			[
				"icemark",
				"lib/components/analytics/tools/IceMarketIndicatorTool.js"
			],
			[
				"anacon",
				"lib/constants/AnalyticsConstants.js"
			],
			[
				"market",
				"lib/components/message-history/message/nodes/Market.js"
			],
			[
				"preferesel",
				"lib/stores/preferences/preferencesSelectors.js"
			],
			[
				"preferresp",
				"lib/stores/preferences/__tests__/preferencesReducer.spec.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "idpper",
		"selected_items":
		[
			[
				"idpper",
				"~/projects/idp-perf-tool/idp-perf-tool.sublime-project"
			],
			[
				"idp",
				"~/projects/sublime projects/idp.sublime-project"
			],
			[
				"",
				"~/projects/idp-communicators/idp-communicators.sublime-project"
			],
			[
				"perft",
				"~/projects/idp-perf-tool/idp-perf-tool.sublime-project"
			],
			[
				"todo",
				"~/projects/todo-demo-app/todo-demo-plugin.sublime-project"
			],
			[
				"menu",
				"~/projects/sublime projects/idp-menu.sublime-project"
			],
			[
				"grid",
				"~/projects/sublime projects/idp-grid.sublime-project"
			],
			[
				"projec",
				"~/projects/sublime projects/projects.sublime-project"
			],
			[
				"comp",
				"~/projects/sublime projects/idp-components.sublime-workspace"
			],
			[
				"pars",
				"~/projects/sublime projects/idp-parsers.sublime-project"
			],
			[
				"tds",
				"~/projects/sublime projects/idp-tds.sublime-project"
			],
			[
				"pro",
				"~/projects/sublime projects/projects.sublime-project"
			],
			[
				"comm",
				"~/projects/sublime projects/idp-communicators.sublime-project"
			],
			[
				"commun",
				"~/projects/sublime projects/idp-communicators.sublime-project"
			],
			[
				"ommunic",
				"~/projects/sublime projects/idp-communicators.sublime-project"
			],
			[
				"communi",
				"~/projects/sublime projects/idp-communicators.sublime-project"
			],
			[
				"contain",
				"~/projects/sublime projects/idp-container.sublime-project"
			],
			[
				"idpmenu",
				"~/projects/sublime projects/idp-menu.sublime-project"
			],
			[
				"con",
				"~/projects/sublime projects/idp-container.sublime-project"
			],
			[
				"per",
				"~/projects/sublime projects/persistent-store.sublime-project"
			],
			[
				"udp",
				"~/projects/sublime projects/idp-parsers.sublime-project"
			],
			[
				"contin",
				"~/projects/sublime projects/idp-container.sublime-project"
			],
			[
				"ui",
				"~/projects/sublime projects/tribe-ui.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 47.0,
		"last_filter": "receiveIncomingEvent",
		"selected_items":
		[
			[
				"receiveIncomingEvent",
				"receiveIncomingEvent"
			],
			[
				"_forwardIncomingEventsToReceiver",
				"_forwardIncomingEventsToReceiver"
			],
			[
				"receiveLongPollEvents",
				"receiveLongPollEvents"
			],
			[
				"getContacts",
				"getContacts"
			],
			[
				"canUserEditContactStatus",
				"canUserEditContactStatus"
			],
			[
				"getAllServiceHandlesForContact",
				"getAllServiceHandlesForContact"
			],
			[
				"isConnectedWithHelpDesk",
				"isConnectedWithHelpDesk"
			],
			[
				"shouldUpgradeContact",
				"shouldUpgradeContact"
			],
			[
				"getServiceHandles",
				"getServiceHandles"
			],
			[
				"handleprese",
				"handlePresenceEvent"
			],
			[
				"applyDefaultGroupIdToContact",
				"applyDefaultGroupIdToContact"
			],
			[
				"InlineAnalyticsMessageLine",
				"InlineAnalyticsMessageLine"
			],
			[
				"getTheoStatus",
				"getTheoStatus"
			],
			[
				"theostatu",
				"theoStatusSelector"
			],
			[
				"getTheo",
				"getTheoStatus"
			],
			[
				"createMarket",
				"createMarket"
			],
			[
				"sendRepriceRequest",
				"sendRepriceRequest"
			],
			[
				"contactsSelector",
				"contactsSelector"
			],
			[
				"shouldInsertUsernameIntoSentDeskMessages",
				"shouldInsertUsernameIntoSentDeskMessages"
			],
			[
				"hasAnalyticsPermissions",
				"hasAnalyticsPermissions"
			],
			[
				"recentlySentMarketOptions",
				"recentlySentMarketOptions"
			],
			[
				"isinlinean",
				"isInlineAnalyticsModeBasic"
			],
			[
				"isConnectedToWatchTab",
				"isConnectedToWatchTab"
			],
			[
				"isPreferenceOn",
				"isPreferenceOn"
			],
			[
				"isInlineAnalyticsModeBasic",
				"isInlineAnalyticsModeBasic"
			],
			[
				"isINlineAn",
				"isInlineAnalyticsModeBasic"
			],
			[
				"isINline",
				"isInlineAnalyticsModeBasic"
			],
			[
				"getInlineAnalyticsModePreferences",
				"getInlineAnalyticsModePreferences"
			],
			[
				"getAnalyticsSource",
				"getAnalyticsSource"
			],
			[
				"getPreferredAnalyticsSource",
				"getPreferredAnalyticsSource"
			],
			[
				"isAllowedUpdate",
				"isAllowedUpdate"
			],
			[
				"selectMarketForPricerOrOpenInWatchTab",
				"selectMarketForPricerOrOpenInWatchTab"
			],
			[
				"selectMarket",
				"selectMarket"
			],
			[
				"_renderRearComponents",
				"_renderRearComponents()"
			],
			[
				"createStubStore",
				"createStubStore"
			],
			[
				"hasUserPermission",
				"hasUserPermission"
			],
			[
				"getAnalyticsServiceDescription",
				"getAnalyticsServiceDescription"
			],
			[
				"shouldUnderlineRecognizedMarkets",
				"shouldUnderlineRecognizedMarkets"
			],
			[
				"getChatRoomSev",
				"getChatRoomService"
			],
			[
				"chatRoomId",
				"chatRoomIdSelector"
			],
			[
				"updateMessageForChatRoomWidget",
				"updateMessageForChatRoomWidget"
			],
			[
				"getClipboardContents",
				"getClipboardContents"
			],
			[
				"markRead",
				"markRead"
			],
			[
				"getChatRoomser",
				"getChatRoomService"
			],
			[
				"getChatroomse",
				"getChatRoomService"
			],
			[
				"findChatRoomById",
				"findChatRoomById"
			],
			[
				"areContactsInFilter",
				"areContactsInFilter"
			],
			[
				"mergeMembersWithContactsSelector",
				"mergeMembersWithContactsSelector"
			],
			[
				"findContactById",
				"findContactById"
			],
			[
				"getUnreadMessageCountForId",
				"getUnreadMessageCountForId"
			],
			[
				"getUnreadMessageCount",
				"getUnreadMessageCount"
			],
			[
				"getUnreadMessageCountForSenderId",
				"getUnreadMessageCountForSenderId"
			],
			[
				"chatroomidhas",
				"chatRoomIdHasActiveMessageFilters"
			],
			[
				"getMessageFiltersForChatRoomId",
				"getMessageFiltersForChatRoomId"
			],
			[
				"getUserHandleByChatRoom",
				"getUserHandleByChatRoom"
			],
			[
				"getChatRoomSnapshots",
				"getChatRoomSnapshots"
			],
			[
				"getChatRoomPermissions",
				"getChatRoomPermissions"
			],
			[
				"getUnreadMessageCountForChatRoomId",
				"getUnreadMessageCountForChatRoomId"
			],
			[
				"getChatRoomSnapshotPermissions",
				"getChatRoomSnapshotPermissions"
			],
			[
				"isChatRoomStopped",
				"isChatRoomStopped"
			],
			[
				"getUsersHandleByService",
				"getUsersHandleByService"
			],
			[
				"getServiceHandleForContact",
				"getServiceHandleForContact"
			],
			[
				"shouldDisplayAnalyticsInline",
				"shouldDisplayAnalyticsInline"
			],
			[
				"hasRFQPermissionSelector",
				"hasRFQPermissionSelector"
			],
			[
				"getAnal",
				"getAnalyticsSource"
			],
			[
				"reprice",
				"sendRepriceRequest"
			],
			[
				"sendrep",
				"sendRepriceRequestToYj"
			],
			[
				"sendRe",
				"sendRepriceRequestToYj"
			],
			[
				"insertAtCaret",
				"insertAtCaret"
			],
			[
				"addRegionOptions",
				"addRegionOptions"
			],
			[
				"sendBlast",
				"sendBlast"
			],
			[
				"inlineAnalyticMessageParseFactory",
				"inlineAnalyticMessageParseFactory"
			],
			[
				"findAnalyticsForStructureId",
				"findAnalyticsForStructureId"
			],
			[
				"contactisCh",
				"contactIsChatRoomMember"
			],
			[
				"updateStructureAnalyticsFromWebIce",
				"updateStructureAnalyticsFromWebIce"
			],
			[
				"isServerInjectedNode",
				"isServerInjectedNode"
			],
			[
				"isOriginalMessageNode",
				"isOriginalMessageNode"
			],
			[
				"updateDisplayAnalyticsInline",
				"updateDisplayAnalyticsInline"
			],
			[
				"updateInsertUsernameIntoSentDeskMessagesSetting",
				"updateInsertUsernameIntoSentDeskMessagesSetting"
			],
			[
				"shouldAutoSendImPreconfirms",
				"shouldAutoSendImPreconfirms"
			],
			[
				"updateUserProfile",
				"updateUserProfile"
			],
			[
				"updateUserAttributes",
				"updateUserAttributes"
			],
			[
				"UserAndSettings",
				"UserAndSettings"
			],
			[
				"getUserAndSettings",
				"getUserAndSettings"
			],
			[
				"isUserAlwaysAvailable",
				"isUserAlwaysAvailable"
			],
			[
				"updateAnalyticsConnectionStatus",
				"updateAnalyticsConnectionStatus"
			],
			[
				"_handleTypeChange",
				"_handleTypeChange"
			],
			[
				"recogniz",
				"RecognizedMessage"
			],
			[
				"RecognizedMessage",
				"RecognizedMessage"
			],
			[
				"reco",
				"RecognizedMessage"
			],
			[
				"sortandgor",
				"sortAndGroupContactsAndPresencesByPreferences"
			],
			[
				"sortContactsByPresenceAndName ",
				"sortContactsByPresenceAndName"
			],
			[
				"getHighestPriority",
				"getHighestPriority"
			],
			[
				"getSoundForPriority",
				"getSoundForPriority"
			],
			[
				"getAggregateSoundUrlForPriority",
				"getAggregateSoundUrlForPriority"
			],
			[
				"getContactOidForTdsHandle",
				"getContactOidForTdsHandle"
			],
			[
				"messageForwardSettingsSelector",
				"messageForwardSettingsSelector"
			],
			[
				"updateMessageForwardSettings",
				"updateMessageForwardSettings"
			],
			[
				"_handleFieldChangeEvent",
				"_handleFieldChangeEvent"
			],
			[
				"shouldDisplayContactNicknames",
				"shouldDisplayContactNicknames"
			],
			[
				"receiveHttpResponseError",
				"receiveHttpResponseError"
			],
			[
				"shouldMonitorActivity",
				"shouldMonitorActivity"
			],
			[
				"getManuallySetPreferences",
				"getManuallySetPreferences"
			],
			[
				"getPresenceStatus",
				"getPresenceStatus"
			],
			[
				"sortAndGroupContactsByPreference",
				"sortAndGroupContactsByPreference"
			],
			[
				"selectValidChatRoomMembers",
				"selectValidChatRoomMembers"
			],
			[
				"getUserChatRoomMember",
				"getUserChatRoomMember"
			],
			[
				"getChatRoomCreatorDisplayName",
				"getChatRoomCreatorDisplayName"
			],
			[
				"shouldShowCreator",
				"shouldShowCreator"
			],
			[
				"reduceContactsToContactsWithDistinctHandlesForService",
				"_reduceContactsToContactsWithDistinctHandlesForService"
			],
			[
				"sortContactsByName",
				"sortContactsByName"
			],
			[
				"shouldDowngradeContact",
				"shouldDowngradeContact"
			],
			[
				"getDisplayNameForContactId",
				"getDisplayNameForContactId"
			],
			[
				"findContactByOid",
				"findContactByOid"
			],
			[
				"filterContactsArray",
				"filterContactsArray"
			],
			[
				"getContactsForGroup",
				"getContactsForGroup"
			],
			[
				"getConnectedCompanies",
				"getConnectedCompanies"
			],
			[
				"getConnectedCompaniesFromApplicationState",
				"getConnectedCompaniesFromApplicationState"
			],
			[
				"renderfoo",
				"_renderFooter"
			],
			[
				"getServiceHandleForContactId",
				"getServiceHandleForContactId"
			],
			[
				"_getContactHandleForService",
				"_getContactHandleForService"
			],
			[
				"blastableContactsSelector",
				"blastableContactsSelector"
			],
			[
				"sortedContactsWithSelectedStateSelector",
				"sortedContactsWithSelectedStateSelector"
			],
			[
				"getProductTemplateIdForContactId",
				"getProductTemplateIdForContactId"
			],
			[
				"_getChatRoomMemberByHandle",
				"_getChatRoomMemberByHandle"
			],
			[
				"_getFilteredContacts",
				"_getFilteredContacts"
			],
			[
				"getChatRoomMemberDisplayNameWithService",
				"getChatRoomMemberDisplayNameWithService"
			],
			[
				"findContactByServiceAndHandle",
				"findContactByServiceAndHandle"
			]
		],
		"width": 674.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 323.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 3
	}
}
